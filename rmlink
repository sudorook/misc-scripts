#!/bin/bash

# SPDX-FileCopyrightText: 2021 - 2024 sudorook <daemon@nullcodon.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

set -eu

ROOT="$(dirname "${0}")"

source "${ROOT}"/globals

#
# Functions
#

function check_file {
  if ! [[ -L "${1}" ]]; then
    show_warning "WARNING: ${1@Q} not a symbolic link."
    return 1
  fi

  if ! [[ -e "${1}" ]]; then
    show_warning "WARNING: ${1@Q} broken symbolic link."
    return 1
  fi

  if ! [[ -f "$(readlink -f "${1}")" ]]; then
    show_warning "WARNING: ${1@Q} link needs to point to a file."
    return 1
  fi

  local dir
  for dir in "${PROTECT_DIRS[@]}"; do
    if [[ "$(readlink -f "${1}")" == "$(readlink -f "${dir}")"* ]]; then
      show_warning "WARNING: files in ${dir@Q} are protected. Skipping."
      return 1
    fi
  done

  return 0
}

function rmlink {
  rm ${VERBOSE:+-v} "$(readlink -f "${1}")"
  rm ${VERBOSE:+-v} "${1}"
}

#
# Globals
#

PROTECT_DIRS=()

#
# Main
#

OPTIONS=v
LONGOPTIONS=verbose
PARSED=$(getopt -o "${OPTIONS}" --long "${LONGOPTIONS}" -n "${0}" -- "${@}")
eval set -- "${PARSED}"

while [ ${#} -ge 1 ]; do
  case ${1} in
    -v | --verbose)
      VERBOSE=true
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR: Invalid flag ${1@Q}."
      exit 3
      ;;
  esac
done

for FILE in "${@}"; do
  if check_file "${FILE}"; then
    rmlink "${FILE}"
  fi
done
