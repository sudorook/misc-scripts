#! /bin/bash
set -eu
source globals

! check_command find sed && exit 3

#
# Globals
#

IGNOREFILES="-iname '*.pdf'\
             -o -iname '*.db'\
             -o -iname '*.bin'\
             -o -iname '*.dat'\
             -o -iname '.Rhistory'\
             -o -iname '*.doc*'\
             -o -iname '*.ppt*'\
             -o -iname '*.png'\
             -o -iname '*.svg'\
             -o -iname '*.jpg'\
             -o -iname '*.tiff?'\
             -o -iname '*.gif'\
             -o -name '.gitignore'\
             -o -name '.gitattributes'\
             -o -iname '*.sw[a-p]'\
             -o -iname '*~'\
             -o -iname '*.tar.*'\
             -o -iname '*.zip'\
             -o -iname '*.tgz'"
IGNOREDIRS="-name '.git'\
            -o -name '.github'\
            -o -name 'bin'\
            -o -name '.deps'\
            -o -name 'autom4te.cache'"

#
# Functions
#

function strip_missing {
  local i
  local missing
  local cmd="sed"

  IFS=$'\n' readarray -t missing <<< "$(git -C "${IN}" ls-files -d)"
  if [ -n "${missing[*]}" ]; then
    for i in "${missing[@]}"; do
      if [ -n "${i}" ]; then
        cmd="${cmd} -e 's,${i}\x00,,'"
      fi
    done
    eval "${cmd}"
  else # if no files have been deleted, pass stdin to stdout
    cat
  fi
}

#
# Main
#

if [ $# -gt 1 ]; then
  show_warning "WARNING: Ignoring inputs ${*:2}."
fi

IN="${1:-.}"

if [ -f "${IN}" ]; then
  wc -l "${IN}"
elif [ -d "${IN}" ]; then
  if command -v git > /dev/null && git -C "${IN}" rev-parse 2> /dev/null; then
    CMD="git -C ${IN@Q} ls-files -co --exclude-standard -z | strip_missing | sed -z -e 's,^,${IN}/,g' | find -files0-from - -maxdepth 0"
  else
    CMD="find ${IN@Q}"
  fi
  CMD="${CMD} \( ${IGNOREDIRS} \) -prune , -type f -not \( ${IGNOREFILES} \)"
  CMD="${CMD} -exec wc -l -- {} +"
  eval "${CMD}"
else
  show_error "ERROR: Unknown input ${1@Q}."
  exit 3
fi
