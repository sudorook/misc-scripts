#! /bin/bash
set -eu
source globals

#
# Consider removing this. MAC address randomization is built into
# NetworkManager now, so use of macchanger is not needed. Set
# <iface>.cloned-mac-address=random in /etc/NetworkManager/NetworkManager.conf,
# and this whole script can be replaced entirely by:
#
#   $ sudo systemctl restart NetworkManager.service
#
# Otherwise, to keep this script, implement the following fixes:
#  - Parse the results of `ip link show` to figure out the interface names for
#    the 'all' option.
#  - Use getopt to parse command line options.
#  - Make sure macchanger is installed before trying to use it (as root).
#  - Print a message upon use describing the NetworkManager MAC address option.
#  - Actually check that the MAC address of the interface(s) are actually
#    changed.
#
#   --A
#

function print_interfaces {
  ip link show | grep "^[0-9]" | grep -v "virbr\|tun\|lo" | \
    cut -d ":" -f2 | sed -e 's/^\s\(.*\)$/  \1/g'
}

if [ "$#" -ne 1 ]; then
  show_error "Error. Specify the network interface to restart."
  print_interfaces
  exit 1
fi

iface=$1

if [ "$iface" = "all" ]; then
  sudo bash -c "\
    systemctl stop NetworkManager.service && \
    ip link set dev wlp3s0 down && \
    ip link set dev enp0s25 down && \
    macchanger -e wlp3s0 && \
    macchanger -e enp0s25 && \
    ip link set dev wlp3s0 up && \
    ip link set dev enp0s25 up && \
    systemctl start NetworkManager.service"
  exit 0
fi

if test "$(ip link show | grep -c "$iface")" -ne 0; then
  sudo bash -c "\
    systemctl stop NetworkManager.service && \
    ip link set dev $iface down && \
    macchanger -e $iface && \
    ip link set dev $iface up && \
    systemctl start NetworkManager.service"
  exit 0
else
  show_error "Interface $iface doesn't exist. Pick from:"
  print_interfaces
  exit 1
fi
