#! /bin/bash
set -eu
source globals

OPTIONS=hji:f:l:
LONGOPTIONS=help,join,input:,first:,last:
PARSED=$(getopt -o ${OPTIONS} --long ${LONGOPTIONS} -n "$0" -- "$@")
eval set -- "$PARSED"

while [ $# -ge 1 ]; do
  case "$1" in
    -i|--input)
      in="$2"
      out="${2%.*}"
      pages=$(pdfinfo "$2" | grep "^Pages:" | sed -n "s/^Pages:\s*\([0-9]\+\)/\1/p")
      shift 2
      ;;
    -f|--first)
      first="$2"
      shift 2
      ;;
    -l|--last)
      last="$2"
      shift 2
      ;;
    -j|--join)
      joinpdfs=true
      shift
      ;;
    -h|--help)
      echo "pdfsplit options:"
      echo "  -i|--input  <pdf input>"
      echo "  -f|--first  <# of first page to split>"
      echo "  -l|--last   <# of last page to split>"
      echo "  -j|--join   <flag to join split pdf pages together (def: false)"
      exit 0
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "Error"
      exit 3
      ;;
  esac
done

# Checks
if ! [[ -v in ]]; then
  show_error "No input file specified. Exiting."
  exit 3
fi

if ! [[ -v first ]]; then
  first=1
fi

if ! [[ -v last ]]; then
  last=$pages
fi

if (( $last > $pages )); then
  last=$pages
fi

if (( $first > $pages )); then
  show_error "Starting page doesn't exist. The file only has $pages pages."
  exit 3
fi

if (( $first > $last )); then
  show_error "What are you playing at?"
  exit 3
fi

# Split the pdf out into the individual files. The if statements are needed so
# that the filenames will get sorted in numerical order. Otherwise, the glob
# used to join the pages at the end won't work. For examples, 02 is sorted
# before 10, but 2 is placed after.
if (( $first >= 10 )); then
  pdfseparate -f $first -l $last "$in" "$out-%d.pdf"
elif (( $last >= 10 )); then
  if (( $last < 10 )); then
    pdfseparate -f $first -l $last "$in" "$out-0%d.pdf"
  fi
  if (( $last >= 10 )); then
    pdfseparate -f $first -l 9 "$in" "$out-0%d.pdf"
    pdfseparate -f 10 -l $last "$in" "$out-%d.pdf"
  fi
else
  pdfseparate -f $first "$in" "$out-0%d.pdf"
fi

# Join
if [[ -v joinpdfs ]]; then
  if [[ $joinpdfs = true ]]; then
    new="${in%.*}-new.pdf"
    rm -f "$new"
    pdfunite "${out}"-*.pdf "$new"
    rm "${out}"-[0-9]*.pdf
  fi
fi
