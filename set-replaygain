#! /bin/bash
set -eu
source globals

#
# Check inputs and requirements
#

function compute_bs1770gain {
  ! check_command bs1770gain && exit 3
  local item
  if [ "${#}" -eq 1 ]; then
    bs1770gain "${@}" -o "${TMPDIR}"
    if [[ "${KEEP}" = true ]]; then
      mkdir -p "${BACKUPDIR}"
      mv "${1}" "${BACKUPDIR}"
      mv "${TMPDIR}" "${1}"
    else
      mv "${1}" "${1}.bak"
      mv "${TMPDIR}" "${1}"
      rm -r "${1}.bak"
    fi
  else
    for item in "${@}"; do
      mkdir -p "${TMPDIR}/$(basename "${item}")"
      bs1770gain "${item}" -o "${TMPDIR}/$(basename "${item}")"
      if [[ "${KEEP}" = true ]]; then
        mkdir -p "${BACKUPDIR}/$(basename "${item}")"
        mv "${item}" "${BACKUPDIR}/$(basename "${item}")"
        mv "${TMPDIR}/$(basename "${item}")" "${item}"
      else
        mv "${item}" "${item}.bak"
        mv "${TMPDIR}/$(basename "${item}")" "${item}"
        rm -r "${item}.bak"
      fi
    done
    rmdir "${TMPDIR}"
  fi
  sync
}

function compute_r128gain {
  ! check_command r128gain && exit 3
  local item
  if [ "${#}" -eq 1 ]; then
    if [[ "${KEEP}" = true ]]; then
      cp -r "${1}" "${BACKUPDIR}"
      r128gain -a -r "${1}"
    else
      r128gain -a -r "${1}"
    fi
  else
    for item in "${@}"; do
      if [[ "${KEEP}" = true ]]; then
        mkdir -p "${BACKUPDIR}/"
        cp -r "${item}" "${BACKUPDIR}/$(basename "${item}")"
        r128gain -a -r "${item}"
      else
        r128gain -a -r "${item}"
      fi
    done
  fi
  sync
}

function check_inputs {
  local input

  if ! [ "${#}" -ge 0 ]; then
    show_error "ERROR: no inputs given. Exiting."
  fi

  for input in "${@}"; do
    if ! [ -e "${input}" ]; then
      show_error "ERROR: ${input@Q} not found. Exiting."
      exit 3
    fi
  done
}

function print_usage {
  show_header "Usage: set-replaygain <file(s) or director(ies)>"
  show_listitem \
    "  -k|--keep   flag to keep original files/directories (default: false)"
  show_listitem \
    "  -g|--gain   loudness scanner (default: bs1770gain)"
  show_listitem \
    "  -h|--help   print (this) help message"
}


#
# Main
#

KEEP=false
GAIN=bs1770gain

OPTIONS=khg:
LONGOPTIONS=keep,help,gain:
PARSED=$(getopt -o ${OPTIONS} --long ${LONGOPTIONS} -n "${0}" -- "${@}")
eval set -- "${PARSED}"

while [ "${#}" -ge 1 ]; do
  case "${1}" in
    -k|--keep)
      KEEP=true
      shift 1
      ;;
    -g|--gain)
      GAIN="${2}"
      shift 2
      ;;
    -h|--help)
      print_usage
      exit
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR: invalid flag."
      exit 3
      ;;
  esac
done

TMPDIR="$(mktemp -d)"
trap 'rm -rf "${TMPDIR}"; exit' INT TERM ERR

# Check that input files/directories exist before computing replay gain.
check_inputs  "${@}"

# Generate name for backup directory.
if [[ "${KEEP}" = true ]]; then
  if [ "${#}" -eq 1 ]; then
    if [ -d "${1}" ]; then
      BACKUPDIR="${1}_$(date +%Y%m%d-%H%M%S)"
    else
      show_warning "Why compute album replay gain for one file? Stopping..."
      exit
    fi
  else
    BACKUPDIR="backup_$(date +%Y%m%d-%H%M%S)"
  fi
fi

case "${GAIN}" in
  bs1770gain)
    compute_bs1770gain "${@}"
    ;;
  r128gain)
    compute_r128gain "${@}"
    ;;
  *)
    show_error "ERROR: ${GAIN@Q} not supported. Exiting."
    exit 3
    ;;
esac
