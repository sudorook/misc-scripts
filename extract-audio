#!/bin/bash

# SPDX-FileCopyrightText: 2017 - 2024 sudorook <daemon@nullcodon.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

set -euo pipefail

ROOT="$(dirname "${0}")"

source "${ROOT}"/globals

! check_command ffmpeg ffprobe sed && exit 3

function extract_audio {
  local nstreams=0
  local stype
  local astring
  local acodec
  local i
  local cmd
  local out
  local in=${1}
  local name=${in%.*}

  nstreams="$(ffprobe -v error -show_format file:"${in}" |
              sed -n "s/nb_streams=\([0-9]\+\)$/\1/p")"
  for i in $(seq 0 "$((nstreams - 1))"); do
    astring="$(ffprobe -v error -select_streams "${i}" -show_streams file:"${in}")"
    acodec="$(echo "${astring}" | sed -n "s/^codec_name=\(.*\)$/\1/p")"
    stype="$(echo "${astring}" | sed -n "s/^codec_type=\(.*\)$/\1/p")"
    if [[ "${stype}" = audio ]]; then
      out="${name}_${i}.${acodec}"
      cmd="ffmpeg -i file:${in@Q} -c:a copy -y file:${out@Q}"
      show_listitem "${cmd}" >&2
      eval "${cmd}"
    fi
  done
}

show_header "Extracting audio streams from ${1}:" >&2
extract_audio "${1}"
