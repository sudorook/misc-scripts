#!/bin/bash

# SPDX-FileCopyrightText: 2024 sudorook <daemon@nullcodon.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

set -eu

ROOT="$(dirname "${0}")"

source "${ROOT}"/globals

! check_command bc ping && exit 3

MTU=1500
SIZE="$((MTU - 28))"
COUNT=10

function test_ip {
  local addr="${1}"
  local avg_time
  local speed
  avg_time="$(ping -s "${SIZE}" -c "${COUNT}" "${addr}" |
              tail -n 1 | cut -d "=" -f2 | cut -d "/" -f2)"
  speed="$(echo "scale=4; 2*${MTU}*8/1024/${avg_time}" | bc -l)"
  printf "%s\n" "${addr}:	${speed} Mbps"
}

function print_usage {
  show_header Usage: ping-test
  cat << EOF
  -c|--count  number of ping samples (default:10)
  -m|--mtu    mtu size in bytes (default:1500)
  -h|--help   print (this) help message
EOF
}

OPTIONS=c:m:h
LONGOPTIONS=count:,mtu:,help
PARSED=$(getopt -o "${OPTIONS}" --long "${LONGOPTIONS}" -n "${0}" -- "${@}")
eval set -- "${PARSED}"

while [ "${#}" -ge 1 ]; do
  case "${1}" in
    -c | --count)
      COUNT="${2}"
      shift 2
      ;;
    -m | --mtu)
      MTU="${2}"
      shift 2
      ;;
    -h | --help)
      print_usage
      exit
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR: Unknown argument ${1@Q}. Exiting."
      exit 3
      ;;
  esac
done

{
  if [ "${#}" -gt 0 ]; then
    echo "${@}"
  else
    cat
  fi
} |
  while IFS= read -r ADDR; do
    test_ip "${ADDR}"
  done
