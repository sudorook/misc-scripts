#! /bin/bash
set -eu
source globals

function make_string_v1 {
  local fontstring=""
  local fonttype
  local count=0

  for fontfile in "${1}"/*; do
    fonttype="$(file "${fontfile}" | \
                sed -n "s|^${fontfile}: \([A-Za-z]\+\) [F|f]ont .*|\1|p")"
    if [[ "${fonttype}" = "OpenType" ]]; then
      fontstring+="-attach \"${fontfile}\" -metadata:s:t:${count} mimetype=application/vnd.ms-opentype "
      count=$(( count + 1 ))
    elif [[ "${fonttype}" = "TrueType" ]]; then
      fontstring+="-attach \"${fontfile}\" -metadata:s:t:${count} mimetype=application/x-truetype-font "
      count=$(( count + 1 ))
    fi
  done
  echo "${fontstring}"
}

function make_string_v2 {
  local fontstring=""
  local fonttype

  for fontfile in "${1}"/*; do
    fonttype="$(file "${fontfile}" | \
                sed -n "s|^${fontfile}: \([A-Za-z]\+\) [F|f]ont .*|\1|p")"
    if [[ "${fonttype}" = "OpenType" ]]; then
      fontstring+="-attach \"${fontfile}\" -metadata:s:t mimetype=application/vnd.ms-opentype "
    elif [[ "${fonttype}" = "TrueType" ]]; then
      fontstring+="-attach \"${fontfile}\" -metadata:s:t mimetype=application/x-truetype-font "
    fi
  done
  echo "${fontstring}"
}

function make_string_v3 {
  local data
  local fontstring=""
  local fonttype
  local fontpath
  local fontfile
  local count=0

  data="$(ffprobe "${1}" 2>&1)"
  for fontpath in "${2}"/*; do
    fontfile="$(basename "${fontpath}")"
    fontname="${fontfile%.*}"
    fontname="${fontname/-/\.\*}"
    fonttype="$(file "${fontpath}" | \
                sed -n "s|^${fontpath}: \([A-Za-z]\+\) [F|f]ont .*|\1|p")"
    if ! [[ "${data}" =~ ${fontname} ]]; then
      if [[ "${fonttype}" = "OpenType" ]]; then
        fontstring+="-attach \"${fontpath}\" -metadata:s:t:${count} mimetype=application/vnd.ms-opentype "
        count=$(( count + 1 ))
      elif [[ "${fonttype}" = "TrueType" ]]; then
        fontstring+="-attach \"${fontpath}\" -metadata:s:t:${count} mimetype=application/x-truetype-font "
        count=$(( count + 1 ))
      fi
    fi
  done
  echo "${fontstring}"
}

function make_string_v4 {
  local data
  local fontstring=""
  local fonttype
  local fontpath
  local fontfile

  data="$(ffprobe "${1}" 2>&1)"
  for fontpath in "${2}"/*; do
    fontfile="$(basename "${fontpath}")"
    fontname="${fontfile%.*}"
    fontname="${fontname/-/\.\*}"
    fonttype="$(file "${fontpath}" | \
                sed -n "s|^${fontpath}: \([A-Za-z]\+\) [F|f]ont .*|\1|p")"
    if ! [[ "${data}" =~ ${fontname} ]]; then
      if [[ "${fonttype}" = "OpenType" ]]; then
        fontstring+="-attach \"${fontpath}\" -metadata:s:t mimetype=application/vnd.ms-opentype "
      elif [[ "${fonttype}" = "TrueType" ]]; then
        fontstring+="-attach \"${fontpath}\" -metadata:s:t mimetype=application/x-truetype-font "
      fi
    fi
  done
  echo "${fontstring}"
}

OPTIONS=i:d:f
LONGOPTIONS=input:,font_dir:,force
PARSED=$(getopt -o ${OPTIONS} --long ${LONGOPTIONS} -n "$0" -- "$@")
eval set -- "$PARSED"

while [ $# -ge 1 ]; do
  case "$1" in
    -i|--input)
      INPUT="${2}"
      shift 2
      ;;
    -d|--font_dir)
      FONTDIR="${2}"
      shift 2
      ;;
    -f|--force_override)
      FORCE=true
      shift 1
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "What was that?"
      exit 3
      ;;
  esac
done

if ! [[ -v FONTDIR ]]; then
  show_error "ERROR: font directory missing. Exiting"
  exit 3
fi

if ! [[ -v FORCE ]]; then
  FORCE=false
fi

if [[ -v INPUT ]]; then
  if [[ -f "${INPUT}" ]]; then
    if $FORCE; then
      make_string_v3 "${INPUT}" "${FONTDIR}"
    else
      make_string_v4 "${INPUT}" "${FONTDIR}"
    fi
  else
    show_error "ERROR: input ${INPUT} is not a file. Exiting."
  fi
else
  if $FORCE; then
    make_string_v1 "${FONTDIR}"
  else
    make_string_v2 "${FONTDIR}"
  fi
fi
