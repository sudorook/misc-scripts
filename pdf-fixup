#! /bin/bash
set -eu
source globals

! check_command pdftk && exit 3

OPTIONS=e:ko:s:
LONGOPTIONS=end:,keep,output:,start:
PARSED=$(getopt -o ${OPTIONS} --long ${LONGOPTIONS} -n "${0}" -- "${@}")
eval set -- "${PARSED}"

while [ ${#} -ge 1 ]; do
  case ${1} in
    -e|--end)
      END="${2}"
      shift 2
      ;;
    -k|--keep)
      KEEP=true
      shift 1
      ;;
    -o|--output)
      OUTPUT="${2}"
      shift
      ;;
    -s|--start)
      START="${2}"
      shift 2
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR: invalid flag."
      exit 3
      ;;
  esac
done

if [[ ${#} -ne 1 ]]; then
  show_error "ERROR: please specify 1 input file."
  exit 3
else
  if ! [ -f "${1}" ]; then
    show_error "ERROR: input '${1}' not found. Exiting."
    exit 3
  fi
  if ! [[ "$(file -b "${1}")" =~ ^PDF ]]; then
    show_error "ERROR: input '${1}' is not a PDF. Exiting."
    exit 3
  fi
  INPUT="${1}"
  NAME=${1%.*}
  EXTENSION=${1##*.}
fi

if ! [[ -v OUTPUT ]]; then
  OUTPUT="${NAME} (new).${EXTENSION}"
fi

if ! [[ -v START ]]; then
  START=1
fi

if ! [[ -v END ]]; then
  END=end
fi

if ! [[ -v KEEP ]]; then
  KEEP=false
fi

TMP="tmp-$$.pdf"
DATA="data-$$.txt"
trap 'rm -f "${TMP}" "${DATA}"; exit' INT TERM ERR

pdftk "$INPUT" cat "${START}"-"${END}" output ${TMP}
pdftk "$INPUT" dump_data output ${DATA}
sed -i "s///g" "${DATA}"
sed -i "/^BookmarkTitle/N;s/\n\([^BookmarkLevel]\)/\1/g" "${DATA}"
sed -i "/^$/d" "${DATA}"

if [[ "${START}" -ne 1 ]]; then
  show_info "Edit the metadata to fix bookmark and media page #s. Then, run:"
  show_listitem "pdftk ${TMP@Q} update_info ${DATA@Q} output ${OUTPUT@Q} && rm ${TMP@Q} ${DATA@Q}"
  exit
fi

if ! $KEEP; then
  pdftk ${TMP} update_info ${DATA} output "${OUTPUT}"
  rm -f "${TMP}" "${DATA}"
else
  show_info "To re-assemble, run:"
  show_listitem "pdftk ${TMP@Q} update_info ${DATA@Q} output ${OUTPUT@Q} && rm ${TMP@Q} ${DATA@Q}"
fi
