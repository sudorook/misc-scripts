#! /bin/bash
set -euo pipefail
source globals

! check_command awk git && exit 3


#
# Functions
#

get_count() {
  local dir
  local cmd
  dir=${1%/*}
  if git -C "${dir}" rev-parse 2>/dev/null; then
    cmd="git -C ${dir@Q} rev-list --count --branches"
    if [ -n "${AUTHOR}" ] || [ -n "${EMAIL}" ]; then
      cmd="${cmd} --author=^${AUTHOR:-.*}\ \<${EMAIL:-.*}\>$"
    fi
    if [ -n "${SINCE}" ]; then
      cmd="${cmd} --since=$(date -d -"${SINCE}" +%s)"
    fi
    if [ -n "${UNTIL}" ]; then
      cmd="${cmd} --until=$(date -d -"${UNTIL}" +%s)"
    else
      cmd="${cmd} --until=$(date -d now +%s)"
    fi
    eval "${cmd}"
  fi
}
export -f get_count


#
# Main
#

SINCE=
UNTIL=
AUTHOR=
EMAIL=

OPTIONS=ha:e:s:u:
LONGOPTIONS=help,author:,email:,since:,until:
PARSED=$(getopt -o ${OPTIONS} --long ${LONGOPTIONS} -n "$0" -- "$@")
eval set -- "$PARSED"

while [ $# -ge 1 ]; do
  case "$1" in
    -a|--author)
      AUTHOR=${2}
      shift 2
      ;;
    -e|--email)
      EMAIL=${2}
      shift 2
      ;;
    -s|--since)
      SINCE=${2}
      shift 2
      ;;
    -u|--until)
      UNTIL=${2}
      shift 2
      ;;
    -h|--help)
      echo "Usage: count-commits -a|--author <author>"
      echo "                     -s|--since  <time>"
      echo "                     -u|--until  <time>"
      echo
      echo "  author = the author of the commit"
      echo "  time   = the period counting back from now, formatted in a way"
      echo "           understandable by 'date' from coreutils (e.g. 1week,"
      echo "           2years, 3days, etc.)"
      exit
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR: option ${1@Q} unrecognized. Exiting."
      exit 3
      ;;
  esac
done

export AUTHOR
export EMAIL
export SINCE
export UNTIL

projectdir="${projectdir:-$HOME}"
PROJECTDIR=("${@:-$projectdir}")

find -L "${PROJECTDIR[@]}" -maxdepth 5 -type d -name ".git" \
  -exec bash -c 'get_count "${1}"' bash {} \; | awk '{s+=$1}END{print s}'
