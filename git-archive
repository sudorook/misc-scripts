#! /bin/bash
set -eu

ROOT="$(dirname "${0}")"

source "${ROOT}"/globals

! check_command git && exit 3

print_usage() {
  show_header "Usage: git-archive"
  cat << EOF
  -d|--dir         directory of git repository to archive
  -t|--tag         tag/branch to archive (e.g. master, HEAD~5, etc.)
  -z|--compress    compression type (zip, gz, xz, or zst)
  -h|--help        show (this) help message
EOF
}

check_dir() {
  if ! [[ -v DIR ]]; then
    if git log > /dev/null 2>&1; then
      DIR="$(git rev-parse --show-toplevel)"
    else
      show_error "No Git directory specified. Exiting."
      exit 3
    fi
  elif [[ "${DIR}" = . ]]; then
    if git log > /dev/null 2>&1; then
      DIR="$(git rev-parse --show-toplevel)"
    else
      show_error "${PWD@Q} is not a Git directory. Exiting."
      exit 3
    fi
  else
    if ! git -C "${DIR}" log > /dev/null 2>&1; then
      show_error "${DIR@Q} is not a Git directory. Exiting."
      exit 3
    fi
  fi
}

TAG="HEAD"
Z="zip"

OPTIONS=d:t:z:h
LONGOPTIONS=dir:,tag:,compress:,help
PARSED=$(getopt -o "${OPTIONS}" --long "${LONGOPTIONS}" -n "${0}" -- "${@}")
eval set -- "${PARSED}"

while [ ${#} -ge 1 ]; do
  case ${1} in
    -d | --dir)
      DIR="${2}"
      shift 2
      ;;
    -t | --tag)
      TAG="${2}"
      shift 2
      ;;
    -z | --compress)
      case "${2,,}" in
        gz | xz | zst | zstd)
          Z="tar.${2}"
          ;;
        zip)
          Z="zip"
          ;;
        *)
          show_warning "WARNING: ${2@Q} not understood. Defaulting to ${Z@Q}"
          ;;
      esac
      shift 2
      ;;
    -h | --help)
      print_usage
      exit
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR: invalid flag."
      print_usage
      exit 3
      ;;
  esac
done

check_dir

PREFIX="$(basename "${DIR}")-${TAG}"
git -C "${DIR}" archive --prefix="${PREFIX}/" "${TAG}" -o "${PWD}/${PREFIX}.${Z}"
