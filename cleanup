#! /bin/bash
set -eu

ROOT="$(dirname "${0}")"

source "${ROOT}"/globals

function delete_directory() {
  local dir_owner
  if [ -d "${1}" ]; then
    dir_owner="$(stat -c "%U" "${1}")"
    if [[ "${USER}" = "${dir_owner}" ]]; then
      if [[ -v 2 ]]; then
        show_header "${2}"
      fi
      rm -rvf "${1}"
      echo
    else
      show_warning "${1@Q} owned by ${dir_owner@Q}. Skipping."
      echo
    fi
  else
    show_warning "${1@Q} not found. Skipping."
  fi
}

function delete_file() {
  local file_owner
  if [ -f "${1}" ]; then
    file_owner="$(stat -c "%U" "${1}")"
    if [[ "${USER}" = "${file_owner}" ]]; then
      rm -vf "${1}"
      echo
    else
      show_warning "${1@Q} owned by ${file_owner@Q}. Skipping."
      echo
    fi
  else
    show_warning "${1@Q} not found. Skipping."
  fi
}

# KDE Clipboard
if check_command qdbus; then
  if qdbus > /dev/null 2>&1; then
    show_header "Clearing Klipper history."
    qdbus org.kde.klipper /klipper org.kde.klipper.klipper.clearClipboardHistory
    echo
  fi
else
  echo
fi

# Nvim state
delete_directory \
  "${HOME}/.local/state/nvim" \
  "Clearing Neovim state."

# Vim undo
delete_directory \
  "${HOME}/.vim/undo" \
  "Clearing Vim undo history."

# Recent files, etc.
if check_command sweeper; then
  if [ -v DESKTOP_SESSION ]; then
    show_header "Running sweeper."
    sweeper --automatic
    echo
  fi
else
  echo
fi

# Okular recent files
show_header "Clearing Okular history."
delete_directory "${HOME}/.local/share/okular/docdata"
echo

# System-wide cleanup
if check_command bleachbit; then
  if [ -f "${HOME}/.config/bleachbit/bleachbit.ini" ]; then
    show_header "Running BleachBit ($USER)."
    bleachbit -c --preset
  else
    show_warning "BleachBit not configured. Skipping."
    echo
  fi
else
  echo
fi

# Calibre trash
delete_directory \
  "${HOME}/Documents/Library/.caltrash/" \
  "Emptying Calibre trash."

# Remove trash directory
delete_directory \
  "${HOME}/.local/share/Trash/" \
  "Deleting trash directory."

# Trash at Share/ mountpoint
delete_directory \
  "${HOME}/Share/.Trash-1000" \
  "Deleting ~/Share trash directory."

# wget history
delete_file "${HOME}/.wget-hsts"
