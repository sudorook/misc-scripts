#! /bin/bash
set -euo pipefail
source globals

! check_command pdfinfo pdfseparate && exit 3

function print_usage {
  show_header "pdfsplit options:"
  show_listitem "  -i|--input  <PDF input>"
  show_listitem "  -f|--first  <# of first page to split>"
  show_listitem "  -l|--last   <# of last page to split>"
  show_listitem "  -j|--join   <flag to join split PDF pages together (def: false)"
}

OPTIONS=hi:f:l:
LONGOPTIONS=help,input:,first:,last:
PARSED=$(getopt -o ${OPTIONS} --long ${LONGOPTIONS} -n "${0}" -- "$@")
eval set -- "${PARSED}"

while [ $# -ge 1 ]; do
  case "${1}" in
    -i | --input)
      IN="${2}"
      OUT="${2%.*}"
      PAGES=$(pdfinfo "${2}" | grep "^Pages:" | sed -n "s/^Pages:\s*\([0-9]\+\)/\1/p")
      shift 2
      ;;
    -f | --FIRST)
      FIRST="${2}"
      shift 2
      ;;
    -l | --LAST)
      LAST="${2}"
      shift 2
      ;;
    -h | --help)
      print_usage
      exit 0
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR: invalid option."
      exit 3
      ;;
  esac
done

# Checks
if ! [[ -v IN ]]; then
  show_error "ERROR: No input file specified. Exiting."
  exit 3
elif ! [[ -f "${IN}" ]]; then
  show_error "ERROR: Input ${IN@Q} not found. Exiting."
  exit 3
fi

FIRST="${FIRST:-1}"
LAST="${LAST:-${PAGES}}"

if ((LAST > PAGES)); then
  show_warning "WARNING: ${LAST@Q} exceeds number of pages ${PAGES@Q}."
  LAST=${PAGES}
fi

if ((FIRST > PAGES)); then
  show_error "Starting page doesn't exist. The file only has ${PAGES} pages."
  exit 3
fi

if ((FIRST > LAST)); then
  show_error "What are you playing at?"
  exit 3
fi

# Split the PDF out into the individual files. The if statements are needed so
# that the filenames will get sorted in numerical order. Otherwise, the glob
# used to join the pages at the end won't work. For example, 02 is sorted
# before 10, but 2 is placed after.
if ((FIRST >= 10)); then
  pdfseparate -f "${FIRST}" -l "${LAST}" "${IN}" "${OUT}-%d.pdf"
elif ((LAST >= 10)); then
  if ((LAST < 10)); then
    pdfseparate -f "${FIRST}" -l "${LAST}" "${IN}" "${OUT}-0%d.pdf"
  fi
  if ((LAST >= 10)); then
    pdfseparate -f "${FIRST}" -l 9 "${IN}" "${OUT}-0%d.pdf"
    pdfseparate -f 10 -l "${LAST}" "${IN}" "${OUT}-%d.pdf"
  fi
else
  pdfseparate -f "${FIRST}" "${IN}" "${OUT}-0%d.pdf"
fi
