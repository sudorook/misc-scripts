#! /bin/bash
set -euo pipefail
source globals

! check_command zip unzip && exit 3

# Add read and write permissions to CSS files
function set_rw {
  find . -type f -name "*.css" \
    -exec chmod u+w,+r {} \;
}

# Remove justified text
function unjustify {
  find . -type f -name "*.css" -exec sed -i \
    -e "s,text-align\s*:\s*justify;,/*text-align: justify;*/,g" \
    -e "s,text-align\s*:\s*justify !important;,/*text-align: justify !important;*/,g" \
    -e "s,text-align\s*:\s*justify[\n\r]*$,/*text-align: justify*/,g" \
    -e "s,text-align\s*:\s*justify},/*text-align: justify*/},g" {} \;
}

# Remove hard-coded colors
function unset_colors {
  find . -type f -name "*.css" -exec sed -i \
    -e "s,background-color\ *:\ *#\([0-9a-f]\+\);,/*background-color: \1;*/,g" \
    -e "s,background-color\ *:\ *#\([0-9a-f]\+\)$,/*background-color: \1*/,g" \
    -e "s,background-color\ *:\ *#\([0-9a-f]\+\)},/*background-color: \1*/},g" \
    -e "s,background-color\ *:\ *\(rgba([0-9\,\ ]\+)\);,/*background-color: \1;*/,g" \
    -e "s,background-color\ *:\ *\(rgba([0-9\,\ ]\+)\)$,/*background-color: \1*/,g" \
    -e "s,background-color\ *:\ *\(rgba([0-9\,\ ]\+)\)},/*background-color: \1*/},g" \
    -e "s,\(;*\ *\)color\ *:\ *#\([0-9a-f]\+\);,\1/*color: \2;*/,g" \
    -e "s,\(;*\ *\)color\ *:\ *#\([0-9a-f]\+\)$,\1/*color: \2*/,g" \
    -e "s,\(;*\ *\)color\ *:\ *#\([0-9a-f]\+\)},\1/*color: \2*/},g" {} \;
}

FILE="$(basename "${1}")"
NAME="${1%.*}"
EXTENSION="${1##*.}"

if ! [[ "$(file -b --mime-type "${1}")" =~ epub ]]; then
  if ! [[ "${EXTENSION,,}" = epub ]]; then
    show_error "ERROR: Input not EPUB format."
    exit 3
  fi
fi

BUILDDIR="$(mktemp -d)"
trap 'rm -rf "${BUILDDIR}"; exit' INT TERM ERR EXIT

cp "${1}" "${BUILDDIR}"
pushd "${BUILDDIR}" >/dev/null

unzip "${FILE}"

set_rw
unjustify
# unset_colors

zip -u "${FILE}" || true # override return false if no update performed

popd >/dev/null
mv "${BUILDDIR}/${FILE}" "${NAME} new.${EXTENSION}"
