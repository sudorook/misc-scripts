#!/bin/bash

# SPDX-FileCopyrightText: 2020 - 2024 sudorook <daemon@nullcodon.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

set -euo pipefail

ROOT="$(dirname "${0}")"

source "${ROOT}"/globals

function print_usage() {
  show_header "Usage: copy-playlist"
  show_listitem "  -i|--input <m3u file>"
  show_listitem "  -d|--dest <destination directory>"
  show_listitem "  -m|--music <music directory>"
}

OPTIONS=hi:d:m:
LONGOPTIONS=help,input:,dest:,music:
PARSED=$(getopt -o "${OPTIONS}" --long "${LONGOPTIONS}" -n "${0}" -- "${@}")
eval set -- "${PARSED}"

while [ ${#} -ge 1 ]; do
  case "${1}" in
    -i | --input)
      INPUT=${2}
      shift 2
      ;;
    -d | --dest)
      DEST=${2}
      shift 2
      ;;
    -m | --music)
      MUSIC=${2}
      shift 2
      ;;
    -h | --help)
      print_usage
      exit
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "ERROR"
      print_usage
      exit 3
      ;;
  esac
done

MUSIC="${MUSIC:-"${musicdir}"}"

if ! [ -d "${MUSIC}" ]; then
  show_error "ERROR: ${MUSIC@Q} does not exist. Exiting."
  exit 3
fi

if [[ -v INPUT ]] && [[ -v DEST ]]; then
  mkdir -p "${DEST}"
  if ! [ -f "${INPUT}" ]; then
    show_error "ERROR: ${INPUT@Q} not a file. Exiting."
    exit 3
  fi
  shopt -s extglob
  while read -r ITEM; do
    if [ -f "${MUSIC}/${ITEM}" ]; then
      cp -uav "${MUSIC}/${ITEM}" "${DEST}/${ITEM##*/+([[:digit:]]) }"
      sync
    else
      show_error "ERROR: file ${ITEM@Q} not found. Exiting."
      exit 3
    fi
  done < "${INPUT}"
  shopt -u extglob
else
  show_error "ERROR: Improper usage."
  print_usage
  exit 3
fi
